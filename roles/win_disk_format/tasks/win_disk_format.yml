---
- name: Gather disk facts
  win_disk_facts:
    filter:
      - physical_disk

- name: Gather all RAW disks
  set_fact:
    raw_disks: "{{ ansible_disks | json_query(jmes_query) }}"
  vars:
    jmes_query: "[?partition_style=='RAW']"

- name: Debug - Show the result - raw_disks
  debug:
    var: raw_disks
  tags:
  - debug
  - never

- name: Ensure RAW disks are Initialised
  win_initialize_disk:
    disk_number: "{{ item.number }}"
  loop: "{{ raw_disks }}"

- name: Partition and Format Block if we have RAW disks
  when: raw_disks | length > 0
  block:
    - name: Update disk facts after Initialisation
      win_disk_facts:

    - name: Gather all partitions with partition style GPT without volumes and not a system disk
      set_fact:
        partition_list: "{{ ansible_disks | json_query(jmes_query) }}"
      vars:
        jmes_query: "[?partition_style=='GPT' && system_disk==`false` && partitions[?volumes == null]]"

    - name: Debug - Show results - partition_list
      debug:
        var: partition_list
      tags:
        - debug
        - never
    
    - name: Ensure partitions on RAW disks are created
      win_partition:
        disk_number: "{{ item.number }}"
        drive_letter: "auto"
        partition_size: "-1"
        state: present
      loop: "{{ partition_list }}"
      no_log: true

    - name: Update disk facts after partitioning
      win_disk_facts:

    - name: Gather all disks with unformatted volumes
      set_fact:
        volumes_list: "{{ ansible_disks | json_query(jmes_query) }}"
      vars:
        jmes_query: "[?partitions[?volumes[?size == `0`]]].{number: number, drive_letter: partitions[].drive_letter, size: physical_disk.size}"

    - name: Debug - Show results - volumes_list
      debug:
        var: volumes_list
      tags:
        - debug
        - never

    - name: Ensure unformatted volumes are formatted with NTFS file system
      win_format:
        drive_letter: "{{ item.drive_letter | first }}"
        new_label: "DATA{{ item.number }}"
        allocation_unit_size: "{% if allocation_unit_size == 0 %}{% if (item.size | int) > 2199023255552 %}65536{% else %}4096{% endif %}{% else %}{{ allocation_unit_size }}{% endif%}"
        file_system: "ntfs"
      loop: "{{ volumes_list }}"